{"version":3,"sources":["util/baseFunction.ts","util/dateFunction.ts","util/copy.ts","util/index.ts","style/page/sg2ts.module.scss","page/sg2ts.tsx"],"names":["BaseFunction","[object Object]","data","index","parseInt","Array","isArray","length","splice","target","keyType","findIndex","item","DateFunction","currentTime","date","Date","_ref","getFullYear","padWithZero","getMonth","getDate","getHours","getMinutes","getSeconds","month","day","hours","minutes","seconds","concat","toString","padStart","copy","text","textArea","document","createElement","style","position","top","left","width","height","padding","border","outline","boxShadow","background","value","body","appendChild","select","msg","error","execCommand","err","removeChild","__webpack_require__","d","__webpack_exports__","module","exports","center","flex","flex-center","container","sub-title-container","title","code","result","sub-title","getResult","sg2ts","space","Sg2ts","_useState","useState","_useState2","Object","_home_travis_build_limengke123_tiny_waffle_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setValue","useMemo","react__WEBPACK_IMPORTED_MODULE_1___default","a","className","styles","antd_lib_button__WEBPACK_IMPORTED_MODULE_4___default","size","type","onClick","message","success","react_codemirror2__WEBPACK_IMPORTED_MODULE_3__","options","mode","theme","lineNumbers","lineWrapping","onBeforeChange","editor","codeValue","readOnly"],"mappings":"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","file":"static/js/10.e7d4ff7a.chunk.js","sourcesContent":["class BaseFunction {\n    /**\n     * @summary 从数组中移除对应索引位置的元素\n     * @param data - {array} - 数据源\n     * @param index - {number} - 索引值\n     * @return {void}\n     * */\n    static removeItemFromListByIndex(data: any[], index: number | string) {\n        if (typeof index !== 'number') {\n            index = parseInt(index, 10)\n        }\n        if (Array.isArray(data) && index >= 0 && index < data.length) {\n            data.splice(index, 1)\n        }\n    }\n\n    /**\n     * @summary 依据id获取元素在数组的索引\n     * @param data - {array} - 数据源\n     * @param target - {any} - 目标值\n     * @param keyType - {string} - 依据的key类型 - id\n     * @return {number} index\n     * */\n    static getIndexFromListById<T extends any, S extends any>(\n        data: S[],\n        target: T,\n        keyType: keyof S = 'id'\n    ): number {\n        if (Array.isArray(data)) {\n            return data.findIndex((item: S) => item[keyType] === target)\n        }\n        return -1\n    }\n}\n\nexport { BaseFunction }\n","class DateFunction {\n    static get currentTime(): string {\n        const date = new Date()\n        const [year, month, day, hours, minutes, seconds] = [\n            date.getFullYear(),\n            DateFunction.padWithZero(date.getMonth() + 1),\n            DateFunction.padWithZero(date.getDate()),\n            DateFunction.padWithZero(date.getHours()),\n            DateFunction.padWithZero(date.getMinutes()),\n            DateFunction.padWithZero(date.getSeconds())\n        ]\n        return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\n    }\n\n    /**\n     * @summary 当时间字符串是一位数字的时候，给字符串补齐0\n     * @example 9 -> 09\n     * @param data - {string} - 原始数据\n     * @return {string}\n     * */\n    static padWithZero(data: any) {\n        const stringData = typeof data !== 'string' ? data.toString() : data\n        return stringData.padStart(2, '0')\n    }\n}\n\nexport { DateFunction }\n","export const copy = function(text: string): { error: Error; msg: string } {\n    const textArea = document.createElement('textarea')\n\n    textArea.style.position = 'fixed'\n    textArea.style.top = '0'\n    textArea.style.left = '0'\n    textArea.style.width = '2em'\n    textArea.style.height = '2em'\n    textArea.style.padding = '0'\n    textArea.style.border = 'none'\n    textArea.style.outline = 'none'\n    textArea.style.boxShadow = 'none'\n    textArea.style.background = 'transparent'\n    textArea.value = text\n\n    document.body.appendChild(textArea)\n\n    textArea.select()\n\n    let msg = ''\n    let error = null\n    try {\n        msg = document.execCommand('copy') ? '成功' : '失败'\n    } catch (err) {\n        error = err\n    } finally {\n        document.body.removeChild(textArea)\n    }\n\n    return {\n        error,\n        msg\n    }\n}\n","export { BaseFunction } from './baseFunction'\nexport { DateFunction } from './dateFunction'\nexport { copy } from './copy'\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"sg2ts_center__2OL6g\",\"flex\":\"sg2ts_flex__2Xgl0\",\"flex-center\":\"sg2ts_flex-center__qYNmV\",\"container\":\"sg2ts_container__3nerR\",\"body\":\"sg2ts_body__22b_d\",\"sub-title-container\":\"sg2ts_sub-title-container__1eFlh\",\"title\":\"sg2ts_title__1u_vc\",\"code\":\"sg2ts_code__3P8So\",\"result\":\"sg2ts_result__3VLa6\",\"sub-title\":\"sg2ts_sub-title__3cTZ3\"};","import React, { useState, useMemo } from 'react'\nimport { sg2ts } from 'sg2ts'\nimport { Controlled } from 'react-codemirror2'\nimport Button from 'antd/lib/button'\nimport message from 'antd/lib/message'\nimport { copy } from '../util'\nimport styles from '../style/page/sg2ts.module.scss'\n\nconst getResult = (value: string) => {\n    return sg2ts(value, {\n        space: 4\n    })\n}\n\nexport default function Sg2ts() {\n    const [value, setValue] = useState('')\n    const handleCopy = () => {\n        const result = getResult(value)\n        const { error } = copy(result)\n        if (error) {\n            message.error(error)\n        } else {\n            message.success('复制成功')\n        }\n    }\n    const handleClear = () => {\n        if (value !== '') {\n            setValue('')\n            message.success('清除成功')\n        }\n    }\n    const handleChange = (editor: any, data: any, codeValue: string) => {\n        if (value !== codeValue) {\n            setValue(codeValue)\n        }\n    }\n    const target = useMemo(() => getResult(value), [value])\n    return (\n        <div className={styles.container}>\n            <h1 className={styles.title}>\n                swagger 数据格式转换成 typescript 格式\n            </h1>\n            <main className={styles.body}>\n                <div className={styles.code}>\n                    <div className={styles['sub-title-container']}>\n                        <span className={styles['sub-title']}>\n                            输入swagger数据\n                        </span>\n                        <Button\n                            size=\"small\"\n                            type=\"primary\"\n                            onClick={handleClear}\n                        >\n                            清除\n                        </Button>\n                    </div>\n                    <Controlled\n                        value={value}\n                        options={{\n                            mode: 'text/javascript',\n                            theme: 'material',\n                            lineNumbers: true,\n                            lineWrapping: true\n                        }}\n                        onBeforeChange={handleChange}\n                    />\n                </div>\n                <div className={styles.result}>\n                    <div className={styles['sub-title-container']}>\n                        <span className={styles['sub-title']}>\n                            生成的typescript数据\n                        </span>\n                        <Button\n                            size=\"small\"\n                            type=\"primary\"\n                            onClick={handleCopy}\n                        >\n                            复制\n                        </Button>\n                    </div>\n                    <Controlled\n                        onBeforeChange={() => {}}\n                        value={target}\n                        options={{\n                            mode: 'text/typescript',\n                            lineNumbers: true,\n                            theme: 'material',\n                            readOnly: true,\n                            lineWrapping: true\n                        }}\n                    />\n                </div>\n            </main>\n        </div>\n    )\n}\n"],"sourceRoot":""}